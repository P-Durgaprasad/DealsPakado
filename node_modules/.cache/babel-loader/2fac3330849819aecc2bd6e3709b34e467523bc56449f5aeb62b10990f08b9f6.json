{"ast":null,"code":"import React,{Component}from'react';import MobileFilter from'./FilterComponents/MobileFilter';import FilterResult from'./FilterComponents/FilterResult';import'../HomeComponent/Css/NewCss.css';import API from'../API_Config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class Mobiles extends Component{constructor(props){super(props);// Function to fetch products based on filters\nthis.fetchProducts=()=>{const{selectedBrand,minPrice,maxPrice}=this.state;let apiUrl=\"\".concat(API,\"/api/product/byCategory?category=Mobiles\");// Construct the API URL based on filter selections\nconst filterParams=[];if(selectedBrand){filterParams.push(\"brand=\".concat(selectedBrand));}if(minPrice>=0){filterParams.push(\"minPrice=\".concat(minPrice));}if(maxPrice<=200000){filterParams.push(\"maxPrice=\".concat(maxPrice));}if(filterParams.length>0){apiUrl+=\"&\".concat(filterParams.join('&'));}fetch(apiUrl).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(data=>{this.setState({products:data,error:null});}).catch(error=>{this.setState({});});};this.handleBrandChange=brand=>{this.setState({selectedBrand:brand},()=>{this.fetchProducts();});};this.handleApplyPriceFilter=_ref=>{let{minPrice,maxPrice}=_ref;this.setState({minPrice,maxPrice},()=>{this.fetchProducts();});};this.state={selectedBrand:'',minPrice:0,maxPrice:200000,products:[],error:null};}componentDidMount(){// Fetch initial product data when the component mounts\nthis.fetchProducts();}render(){const{selectedBrand,products,error}=this.state;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MobileFilter,{selectedBrand:selectedBrand,onBrandChange:this.handleBrandChange,onPriceChange:this.handleApplyPriceFilter}),error?/*#__PURE__*/_jsxs(\"p\",{children:[\"Error fetching products: \",error.message]}):/*#__PURE__*/_jsx(FilterResult,{products:products})]});}}export default Mobiles;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}