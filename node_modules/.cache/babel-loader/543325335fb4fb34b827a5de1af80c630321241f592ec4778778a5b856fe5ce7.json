{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NorthAlley\\\\React_Projects\\\\dealsfinderindia\\\\src\\\\Components\\\\HeaderComponent\\\\SearchBar.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSearch = () => {\n      // Split user input into words\n      const keywords = this.state.userInput.split(' ');\n\n      // Build conditions for each keyword\n      const conditions = keywords.map(keyword => {\n        return `LOWER(itemTitle) LIKE '%${keyword.toLowerCase()}%'`;\n      });\n\n      // Construct the SQL query\n      const query = `SELECT * FROM product WHERE ${conditions.join(' OR ')}`;\n\n      // Send the query to your server (using fetch or Axios, for example)\n      // Make sure to use proper API endpoints and data handling\n\n      // In a real app, you would make an API call to your server here and set the search results in state.\n      // For this example, we'll set some mock data as search results.\n      const mockResults = [\n        // Your mock search results data\n      ];\n      this.setState({\n        searchResults: mockResults\n      });\n    };\n    this.handleInputChange = e => {\n      this.setState({\n        userInput: e.target.value\n      });\n    };\n    this.state = {\n      userInput: '',\n      searchResults: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: this.state.userInput,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result.itemTitle\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SearchBar;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","SearchBar","constructor","props","handleSearch","keywords","state","userInput","split","conditions","map","keyword","toLowerCase","query","join","mockResults","setState","searchResults","handleInputChange","e","target","value","render","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","result","index","itemTitle"],"sources":["C:/Users/NorthAlley/React_Projects/dealsfinderindia/src/Components/HeaderComponent/SearchBar.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userInput: '',\r\n      searchResults: [],\r\n    };\r\n  }\r\n\r\n  handleSearch = () => {\r\n    // Split user input into words\r\n    const keywords = this.state.userInput.split(' ');\r\n\r\n    // Build conditions for each keyword\r\n    const conditions = keywords.map(keyword => {\r\n      return `LOWER(itemTitle) LIKE '%${keyword.toLowerCase()}%'`;\r\n    });\r\n\r\n    // Construct the SQL query\r\n    const query = `SELECT * FROM product WHERE ${conditions.join(' OR ')}`;\r\n\r\n    // Send the query to your server (using fetch or Axios, for example)\r\n    // Make sure to use proper API endpoints and data handling\r\n\r\n    // In a real app, you would make an API call to your server here and set the search results in state.\r\n    // For this example, we'll set some mock data as search results.\r\n    const mockResults = [\r\n      // Your mock search results data\r\n    ];\r\n\r\n    this.setState({ searchResults: mockResults });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ userInput: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={this.state.userInput}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <button onClick={this.handleSearch}>Search</button>\r\n        <ul>\r\n          {this.state.searchResults.map((result, index) => (\r\n            <li key={index}>{result.itemTitle}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,SAASH,SAAS,CAAC;EAChCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAOfC,YAAY,GAAG,MAAM;MACnB;MACA,MAAMC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC;;MAEhD;MACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,GAAG,CAACC,OAAO,IAAI;QACzC,OAAQ,2BAA0BA,OAAO,CAACC,WAAW,CAAC,CAAE,IAAG;MAC7D,CAAC,CAAC;;MAEF;MACA,MAAMC,KAAK,GAAI,+BAA8BJ,UAAU,CAACK,IAAI,CAAC,MAAM,CAAE,EAAC;;MAEtE;MACA;;MAEA;MACA;MACA,MAAMC,WAAW,GAAG;QAClB;MAAA,CACD;MAED,IAAI,CAACC,QAAQ,CAAC;QAAEC,aAAa,EAAEF;MAAY,CAAC,CAAC;IAC/C,CAAC;IAAA,KAEDG,iBAAiB,GAAIC,CAAC,IAAK;MACzB,IAAI,CAACH,QAAQ,CAAC;QAAET,SAAS,EAAEY,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC,CAAC;IAC9C,CAAC;IAhCC,IAAI,CAACf,KAAK,GAAG;MACXC,SAAS,EAAE,EAAE;MACbU,aAAa,EAAE;IACjB,CAAC;EACH;EA8BAK,MAAMA,CAAA,EAAG;IACP,oBACEtB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBJ,KAAK,EAAE,IAAI,CAACf,KAAK,CAACC,SAAU;QAC5BmB,QAAQ,EAAE,IAAI,CAACR;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACF9B,OAAA;QAAQ+B,OAAO,EAAE,IAAI,CAAC3B,YAAa;QAAAmB,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnD9B,OAAA;QAAAuB,QAAA,EACG,IAAI,CAACjB,KAAK,CAACW,aAAa,CAACP,GAAG,CAAC,CAACsB,MAAM,EAAEC,KAAK,kBAC1CjC,OAAA;UAAAuB,QAAA,EAAiBS,MAAM,CAACE;QAAS,GAAxBD,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwB,CACvC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV;AACF;AAEA,eAAe7B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}