{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NorthAlley\\\\React_Projects\\\\dealspakado\\\\src\\\\Components\\\\HeaderComponent\\\\JoinTelegram.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport logo from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinTelegram = () => {\n  _s();\n  const [isDesktop, setIsDesktop] = useState(false);\n  const channelLink = \"https://t.me/my_telegram_channel\";\n  const handleButtonClick = () => {\n    if (isDesktop) {\n      // Open the Telegram link in a new tab.\n      window.open(channelLink, \"_blank\");\n    } else {\n      // Check if Telegram is installed on the user's device.\n      const isTelegramInstalled = window.matchMedia(\"(platform: iphone)\").matches || window.matchMedia(\"(platform: android)\").matches;\n\n      // If Telegram is installed, open it. Otherwise, open the Telegram link in the browser.\n      if (isTelegramInstalled) {\n        window.open(`tg://resolve?domain=my_telegram_channel`);\n      } else {\n        window.open(channelLink, \"_blank\");\n      }\n    }\n  };\n  useEffect(() => {\n    setIsDesktop(window.matchMedia(\"(hover: none)\").matches);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"telegram_text\",\n    onClick: handleButtonClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"telegram-img\",\n      alt: \"Telegram logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"telegram_title\",\n      children: \"Follow Our Telegram Channel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinTelegram, \"I3DqNlxt7Pw4zzIZQic0ZfednQQ=\");\n_c = JoinTelegram;\nexport default JoinTelegram;\nvar _c;\n$RefreshReg$(_c, \"JoinTelegram\");","map":{"version":3,"names":["React","useState","useEffect","logo","jsxDEV","_jsxDEV","JoinTelegram","_s","isDesktop","setIsDesktop","channelLink","handleButtonClick","window","open","isTelegramInstalled","matchMedia","matches","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/NorthAlley/React_Projects/dealspakado/src/Components/HeaderComponent/JoinTelegram.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport logo from './';\r\n\r\nconst JoinTelegram = () => {\r\n  const [isDesktop, setIsDesktop] = useState(false);\r\n  const channelLink = \"https://t.me/my_telegram_channel\";\r\n\r\n  const handleButtonClick = () => {\r\n    if (isDesktop) {\r\n      // Open the Telegram link in a new tab.\r\n      window.open(channelLink, \"_blank\");\r\n    } else {\r\n      // Check if Telegram is installed on the user's device.\r\n      const isTelegramInstalled = window.matchMedia(\"(platform: iphone)\").matches || window.matchMedia(\"(platform: android)\").matches;\r\n\r\n      // If Telegram is installed, open it. Otherwise, open the Telegram link in the browser.\r\n      if (isTelegramInstalled) {\r\n        window.open(`tg://resolve?domain=my_telegram_channel`);\r\n      } else {\r\n        window.open(channelLink, \"_blank\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsDesktop(window.matchMedia(\"(hover: none)\").matches);\r\n  }, []);\r\n\r\n  return (\r\n    <button className=\"telegram_text\" onClick={handleButtonClick}>\r\n      <img src={logo} className='telegram-img' alt=\"Telegram logo\" />\r\n      <p className=\"telegram_title\">Follow Our Telegram Channel</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default JoinTelegram;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,WAAW,GAAG,kCAAkC;EAEtD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIH,SAAS,EAAE;MACb;MACAI,MAAM,CAACC,IAAI,CAACH,WAAW,EAAE,QAAQ,CAAC;IACpC,CAAC,MAAM;MACL;MACA,MAAMI,mBAAmB,GAAGF,MAAM,CAACG,UAAU,CAAC,oBAAoB,CAAC,CAACC,OAAO,IAAIJ,MAAM,CAACG,UAAU,CAAC,qBAAqB,CAAC,CAACC,OAAO;;MAE/H;MACA,IAAIF,mBAAmB,EAAE;QACvBF,MAAM,CAACC,IAAI,CAAE,yCAAwC,CAAC;MACxD,CAAC,MAAM;QACLD,MAAM,CAACC,IAAI,CAACH,WAAW,EAAE,QAAQ,CAAC;MACpC;IACF;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdO,YAAY,CAACG,MAAM,CAACG,UAAU,CAAC,eAAe,CAAC,CAACC,OAAO,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAQY,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEP,iBAAkB;IAAAQ,QAAA,gBAC3Dd,OAAA;MAAKe,GAAG,EAAEjB,IAAK;MAACc,SAAS,EAAC,cAAc;MAACI,GAAG,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DpB,OAAA;MAAGY,SAAS,EAAC,gBAAgB;MAAAE,QAAA,EAAC;IAA2B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEb,CAAC;AAAClB,EAAA,CA/BID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}