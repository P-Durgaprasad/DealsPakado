{"version":3,"file":"static/js/236.d6fb4cc5.chunk.js","mappings":"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","sources":["Components/NavbarComponent/FilterComponents/BabyFilter.js","Components/NavbarComponent/Baby.js","Components/NavbarComponent/FilterComponents/FilterResult.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Css/ElectronicsFilter.css';\r\nimport all from '../Images/5110770.png'\r\nimport Babydress from '../Images/BabyDress.png';\r\nimport diapers from '../Images/diapers.png';\r\n\r\nconst BabyFilter = ({\r\n  selectedSubCategory,\r\n  onSubCategoryChange,\r\n  onPriceChange\r\n}) => {\r\n\r\n  const [minPrice, setMinPrice] = useState(0);\r\n  const [maxPrice, setMaxPrice] = useState(200000);\r\n  const handleApply = () => {\r\n    onPriceChange({ minPrice, maxPrice });\r\n  };\r\n  return (\r\n    <div className=\"product-filter\">\r\n      <div className='brand-section'>\r\n        <div className={`filter-option ${selectedSubCategory === '' ? 'selected' : ''}`} onClick={() => onSubCategoryChange('')}>\r\n          <div className='brand-image'>\r\n            <img className=\"filter-image\" src={all} alt=\"All Appliance's\" />\r\n          </div>\r\n          <div className={`filter-text ${selectedSubCategory === '' ? 'selected-text' : ''}`}>\r\n            <span className=\"option\">All Items</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`filter-option ${selectedSubCategory === 'BabyDress' ? 'selected' : ''}`} onClick={() => onSubCategoryChange('BabyDress')}>\r\n          <div className='brand-image'>\r\n            <img className=\"filter-image\" src={Babydress} alt=\"all\" />\r\n          </div>\r\n          <div className={`filter-text ${selectedSubCategory === 'BabyDress' ? 'selected-text' : ''}`}>\r\n            <span className=\"option\">Clothing</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`filter-option ${selectedSubCategory === 'diapers' ? 'selected' : ''}`} onClick={() => onSubCategoryChange('diapers')}>\r\n          <div className='brand-image'>\r\n            <img className=\"filter-image\" src={diapers} alt=\"all\" />\r\n          </div>\r\n          <div className={`filter-text ${selectedSubCategory === 'diapers' ? 'selected-text' : ''}`}>\r\n            <span className=\"option\">Diapers and Changing</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"filter-section-price\">\r\n        <label id='price-label'>Set Price Range:</label>\r\n        <div className=\"price-filter\">\r\n          <input\r\n            type=\"number\"\r\n            id='minValue'\r\n            placeholder=\"Min price\"\r\n            onChange={(e) => setMinPrice(e.target.value)}\r\n            min={0}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            id='maxValue'\r\n            placeholder=\"Max price\"\r\n            onChange={(e) => setMaxPrice(e.target.value)}\r\n            max={200000}\r\n          />\r\n          <button className='Apply-button' onClick={handleApply}>Apply</button>\r\n        </div>\r\n        <a href='/babyitems' className='clear-filter'>Clear filter</a>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default BabyFilter;\r\n","import React, { Component } from 'react';\r\nimport FilterResult from './FilterComponents/FilterResult';\r\nimport '../HomeComponent/Css/NewCss.css'; \r\nimport BabyFilter from './FilterComponents/BabyFilter';\r\nimport API from '../API_Config';\r\n\r\nclass Baby extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedSubCategory: '',\r\n      minPrice: 0,\r\n      maxPrice: 200000,\r\n      products: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchProducts();\r\n  }\r\n\r\n  fetchProducts = () => {\r\n    const { selectedSubCategory, minPrice, maxPrice } = this.state;\r\n    let apiUrl = `${API}/api/product/byCategory?category=Baby`;\r\n\r\n    const filterParams = [];\r\n\r\n    if (selectedSubCategory) {\r\n      filterParams.push(`subcategory=${selectedSubCategory}`);\r\n    }\r\n\r\n    if (minPrice >= 0) {\r\n      filterParams.push(`minPrice=${minPrice}`);\r\n    }\r\n\r\n    if (maxPrice <= 200000) {\r\n      filterParams.push(`maxPrice=${maxPrice}`);\r\n    }\r\n\r\n    if (filterParams.length > 0) {\r\n      apiUrl += `&${filterParams.join('&')}`;\r\n    }\r\n\r\n    fetch(apiUrl)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        this.setState({ products: data, error: null });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({  });\r\n      });\r\n  };\r\n\r\n\r\n  handleSubCategoryChange = (brand) => {\r\n    this.setState({ selectedSubCategory: brand }, () => {\r\n      this.fetchProducts();\r\n    });\r\n  };\r\n\r\n\r\n  handleApplyPriceFilter = ({ minPrice, maxPrice }) => {\r\n    this.setState({ minPrice, maxPrice }, () => {\r\n      this.fetchProducts();\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { selectedSubCategory,products, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <BabyFilter\r\n          selectedSubCategory={selectedSubCategory}\r\n          onPriceChange={this.handleApplyPriceFilter}\r\n          onSubCategoryChange={this.handleSubCategoryChange}\r\n        />\r\n        {error ? (\r\n          <p>Error fetching products: {error.message}</p>\r\n        ) : (\r\n          <FilterResult products={products} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Baby;\r\n","import React, { useState } from 'react';\r\nimport '../../HomeComponent/Css/NewCss.css';\r\nimport ShareProduct from './ShareProduct';\r\n\r\nconst FilterResult = ({ products }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const dealsPerPage = 50;\r\n  const indexOfLastDeal = currentPage * dealsPerPage;\r\n  const indexOfFirstDeal = indexOfLastDeal - dealsPerPage;\r\n  const currentDeals = products.slice(indexOfFirstDeal, indexOfLastDeal);\r\n\r\n  const goToPage = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const goToPreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const goToNextPage = () => {\r\n    if (currentPage < Math.ceil(products.length / dealsPerPage)) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const renderStars = (rating) => {\r\n    const fullStars = Math.floor(rating);\r\n    const halfStar = rating - fullStars >= 0.5;\r\n\r\n    const stars = [];\r\n    for (let i = 1; i <= 5; i++) {\r\n      if (i <= fullStars) {\r\n        stars.push(<span key={i} className=\"star\">&#9733;</span>);\r\n      } else if (halfStar && i === Math.ceil(rating)) {\r\n        stars.push(<span key={i} className=\"star\">&#9733;</span>);\r\n      } else {\r\n        stars.push(<span key={i} className=\"star\">&#9734;</span>);\r\n      }\r\n    }\r\n\r\n    return stars;\r\n  };\r\n\r\n  return (\r\n    <div className='deals-container-main'>\r\n      <div className=\"deals-container\">\r\n        {products.length === 0 ? (\r\n          <div className='no-deals-container'>\r\n          <p className=\"no-deals-div\">Currently, No Deals Are available</p>\r\n          </div>\r\n        ) : (\r\n          currentDeals.map((deal) => (\r\n            <div className='main-deal-card'key={deal.itemId}>\r\n              <div key={deal.itemId} className=\"deal-card\">\r\n                <a href={deal.affiliateLink} className='brandUrl' target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <div className='deal-body-div'>\r\n                    <div className='deal-image-div'>\r\n                      <img src={deal.imageUrl} alt={deal.title} className='deal-image' />\r\n                    </div>\r\n                    <div className='deal-title-div'>\r\n                      <h1 className='deal-title'>{deal.itemTitle}</h1>\r\n                    </div>\r\n                    <div className='deal-down-div'>\r\n                      <div className='brand-name-rating'>\r\n                        <div className='brandName-info'>\r\n                          {deal.affiliateSite}\r\n                        </div>\r\n                        <div className=\"deal-rating\">\r\n                          {deal.rating > 0 ? (\r\n                            <div className='deals-stars'>\r\n                              <div className=\"deal-rating-number\">\r\n                                <span>{parseFloat(deal.rating).toFixed(1)}</span>\r\n                              </div>\r\n                              <div className='rating'>\r\n                                {renderStars(deal.rating)}\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"no-reviews\">No Reviews</div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"deal-info\">\r\n                        <div className=\"regular-price\">\r\n                          Rs.{deal.originalMRP.toLocaleString()}/-\r\n                        </div>\r\n                        <div className=\"deal-price\">\r\n                          Rs.{deal.offerPrice.toLocaleString()}/-\r\n                        </div>\r\n                        <span className=\"offer-label\">\r\n                          {Math.round(((deal.originalMRP - deal.offerPrice) / deal.originalMRP) * 100)}% Off\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n                <div className='shopnow'>\r\n                  <div className='show-now-link'>\r\n                    <a href={deal.affiliateLink} className='shop-now-button' target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      Shop Now\r\n                    </a>\r\n                  </div>\r\n                  <div className='whatsapp-share'>\r\n                    <ShareProduct url={deal.affiliateLink} title={deal.itemTitle} imageUrl={deal.imageUrl} price={deal.offerPrice} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className=\"pagination-container\">\r\n        <button\r\n          onClick={goToPreviousPage}\r\n          className=\"pagination-button arrow-button\"\r\n          disabled={currentPage === 1}\r\n        >\r\n          &#8249;\r\n        </button>\r\n        {Array.from({ length: Math.ceil(products.length / dealsPerPage) }, (_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => goToPage(index + 1)}\r\n            className={`pagination-button ${currentPage === index + 1 ? 'active' : ''}`}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n        <button\r\n          onClick={goToNextPage}\r\n          className=\"pagination-button arrow-button\"\r\n          disabled={currentPage === Math.ceil(products.length / dealsPerPage)}\r\n        >\r\n          &#8250;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterResult;\r\n"],"names":["_ref","selectedSubCategory","onSubCategoryChange","onPriceChange","minPrice","setMinPrice","useState","maxPrice","setMaxPrice","_jsxs","className","children","concat","onClick","_jsx","src","all","alt","Babydress","diapers","id","type","placeholder","onChange","e","target","value","min","max","handleApply","href","Baby","Component","constructor","props","super","fetchProducts","this","state","apiUrl","API","filterParams","push","length","join","fetch","then","response","ok","Error","json","data","setState","products","error","catch","handleSubCategoryChange","brand","handleApplyPriceFilter","componentDidMount","render","BabyFilter","message","FilterResult","currentPage","setCurrentPage","indexOfLastDeal","indexOfFirstDeal","currentDeals","slice","renderStars","rating","fullStars","Math","floor","halfStar","stars","i","ceil","map","deal","affiliateLink","rel","imageUrl","title","itemTitle","affiliateSite","parseFloat","toFixed","originalMRP","toLocaleString","offerPrice","round","ShareProduct","url","price","itemId","goToPreviousPage","disabled","Array","from","_","index","window","scrollTo","goToNextPage"],"sourceRoot":""}